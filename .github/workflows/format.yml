name: C++ Code Formatting

on:
  pull_request:
    paths:
      - '**/*.cpp'
      - '**/*.hpp'
      - '**/*.c'
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cxx'
  push:
    branches:
      - main
    paths:
      - '**/*.cpp'
      - '**/*.hpp'
      - '**/*.c'
      - '**/*.h'
      - '**/*.cc'
      - '**/*.cxx'

jobs:
  format-check:
    runs-on: ubuntu-latest
    name: Check C++ Code Formatting
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format
        
    - name: Create .clang-format file
      run: |
        cat > .clang-format << 'EOF'
        BasedOnStyle: Google
        BreakBeforeBraces: Allman
        IndentWidth: 4
        UseTab: Never
        ColumnLimit: 80
        AccessModifierOffset: -4
        AlignAfterOpenBracket: Align
        AllowShortFunctionsOnASingleLine: Empty
        BinPackArguments: false
        BinPackParameters: false
        BreakBeforeBinaryOperators: NonAssignment
        BreakConstructorInitializers: BeforeColon
        BreakInheritanceList: BeforeColon
        ConstructorInitializerIndentWidth: 4
        ContinuationIndentWidth: 4
        Cpp11BracedListStyle: true
        IndentCaseLabels: true
        IndentPPDirectives: BeforeHash
        KeepEmptyLinesAtTheStartOfBlocks: false
        NamespaceIndentation: None
        PointerAlignment: Left
        SpaceAfterCStyleCast: false
        SpaceAfterLogicalNot: false
        SpaceAfterTemplateKeyword: true
        SpaceBeforeAssignmentOperators: true
        SpaceBeforeCpp11BracedList: false
        SpaceBeforeCtorInitializerColon: true
        SpaceBeforeInheritanceColon: true
        SpaceBeforeParens: ControlStatements
        SpaceBeforeRangeBasedForLoopColon: true
        SpaceInEmptyParentheses: false
        SpacesBeforeTrailingComments: 2
        SpacesInAngles: false
        SpacesInCStyleCastParentheses: false
        SpacesInContainerLiterals: true
        SpacesInParentheses: false
        SpacesInSquareBrackets: false
        Standard: Cpp11
        EOF
        
    - name: Check formatting
      continue-on-error: true
      run: |
        find . -name "*.cpp" -o -name "*.hpp" | \
        while read file; do
          if ! clang-format --dry-run --Werror "$file" > /dev/null 2>&1; then
            echo "❌ File $file is not properly formatted"
            echo "Expected formatting:"
            clang-format "$file" | head -n 20
            echo "..."
            exit 1
          else
            echo "✅ File $file is properly formatted"
          fi
        done
        
    - name: Show formatting diff if check failed
      continue-on-error: true
      if: failure()
      run: |
        echo "The following files need formatting:"
        find . -name "*.cpp" -o -name "*.hpp" | \
        while read file; do
          if ! clang-format --dry-run --Werror "$file" > /dev/null 2>&1; then
            echo "=== Diff for $file ==="
            clang-format "$file" | diff -u "$file" - || true
            echo
          fi
        done
